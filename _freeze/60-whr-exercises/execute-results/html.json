{
  "hash": "d07b42f56576cc732c112432c9c6ebf8",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexecute:\n  cache: true\n---\n\n\n\n# WHR exercises {#sec-annex-whr-exercises}\n\n\n\n\n## Content for WHR exercises {.unnumbered}\n\n::::: {#obj-chap03}\n:::: {.my-objectives}\n::: {.my-objectives-header}\nObjectives\n:::\n\n::: {.my-objectives-container}\nIn this file I will try out things I have learned about {**shiny**} with my practice example of <a class='glossary' title='The World Happiness Reports are a partnership of Gallup, the Oxford Wellbeing Research Centre, the UN Sustainable Development Solutions Network, and the WHR’s Editorial Board. The report is produced under the editorial control of the WHR Editorial Board. The Reports reflects a worldwide demand for more attention to happiness and well-being as criteria for government policy. It reviews the state of happiness in the world today and shows how the science of happiness explains personal and national variations in happiness. (https://worldhappiness.report/about/)'>WHR</a> data.\n\n:::\n::::\n:::::\n\n## Choosing the year via a slider {#sec-annex-choose-year-via-slider}\n\nIn <a class='glossary' title='The World Happiness Reports are a partnership of Gallup, the Oxford Wellbeing Research Centre, the UN Sustainable Development Solutions Network, and the WHR’s Editorial Board. The report is produced under the editorial control of the WHR Editorial Board. The Reports reflects a worldwide demand for more attention to happiness and well-being as criteria for government policy. It reviews the state of happiness in the world today and shows how the science of happiness explains personal and national variations in happiness. (https://worldhappiness.report/about/)'>WHR</a> I have datasets for the years 2011, 2012, 2014-2024. (Yes, 2013 is missing!)\n\nAt first I thought to use radio boxes to choose the year the country map should show. But after reading \"Numeric Input\" in @sec-02-numeric-input I decided for the better alternative of a `sliderInput` with the available years.\n\n::: {.my-code-collection}\n:::: {.my-code-collection-header}\n::::: {.my-code-collection-icon}\n:::::\n:::::: {#exm-annex-whr-exercises-sliderInput}\n: Choosing the year of the dataset with a slider\n::::::\n\n::::\n\n::::{.my-code-collection-container}\n\n::: {.panel-tabset}\n\n###### Code1\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-annex-whr-exercises-sliderInput-code1}\n: Choosing the year of the dataset with a slider\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nlibrary(shiny)\n\nui <- fluidPage(\n  sliderInput(\"year\", \"Choose year\", value = 2024, min = 2011, max = 2024)\n)\n\nserver <- function(input, output, session) {\n\n    }\n\nshinyApp(ui, server)\n```\n:::\n\n\n::::\n:::::\n\n###### Code2\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-annex-whr-exercises-sliderInput-code2}\n: Choosing the year of the dataset with a slider\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nlibrary(shiny)\n\nui <- fluidPage(\n  sliderInput(\"year\", \n      label = \"Choose year\", \n      value = 2024,\n      min = 2011,\n      max = 2024,\n      sep =\"\"\n      )\n)\n\nserver <- function(input, output, session) {\n\n    }\n\nshinyApp(ui, server)\n```\n:::\n\n\n::::\n:::::\n\n###### Shiny1\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-annex-whr-exercises-sliderInput-shiny1}\n: Choosing the year of the dataset with a slider\n::::::\n:::\n::::{.my-r-code-container}\n```{shinylive-r}\n#| standalone: true\n#| viewerHeight: 100\n\nlibrary(shiny)\n\nui <- fluidPage(\n  sliderInput(\"year\", \"Choose year\", value = 2024, min = 2011, max = 2024)\n)\n\nserver <- function(input, output, session) {\n\n    }\n\nshinyApp(ui, server)\n```\n\n\n***\n\nThe year is not in the desired format. I do not want the comma as a thousand separator. Reading the documentation I learned about the parameter `sep` with it default value `sep = \",\"`. So with the next tab I will use `sep = \"\"` to get rid of the thousand separator.\n::::\n:::::\n\n\n\n###### Shiny2\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-annex-whr-exercises-sliderInput-shiny}\n: Choosing the year of the dataset with a slider\n::::::\n:::\n::::{.my-r-code-container}\n```{shinylive-r}\n#| standalone: true\n#| viewerHeight: 100\n\nlibrary(shiny)\n\nui <- fluidPage(\n  sliderInput(\"year\", \n      label = \"Choose year\", \n      value = 2024,\n      min = 2011,\n      max = 2024,\n      sep =\"\"\n      )\n)\n\nserver <- function(input, output, session) {\n\n    }\n\nshinyApp(ui, server)\n```\n\n***\n\nThis is now better. But I have still the problem, that there is no data for 2013. I could leave it in the hope that it will not generate an error but showing all countries with `NA`-values. (Additionally I could place a message saying \"For 2013 there is no dataset available\".)\n\nAnother option would be trying to use `shinyWidgets::sliderTextInput()` to construct a slider widget with characters instead of numeric values.\n\nBut in both cases I have to use the data to see the effect of the different code snippets.\n\n\n\n::::\n:::::\n\n:::\n\n::::\n:::::\n\n::: {.callout-note}\n###### Another very different option is not to use a slider but a menu! But then I don't have the animation option anymore.\n:::\n\nI will come back `shiny::sliderInput()` resp. `shinyWidgets::sliderTextInput()` to check the following options:\n\n- What happens when in a standard slider configuration people choose the year 2013?\n- What does it look with a message saying \"For 2013 there is no dataset available\".\n- Trying out the animation feature for the `shiny::sliderInput()`\n- Using a specified list of years as character strings with `shinyWidgets::sliderTextInput()`\n- Try out a menu choice with specified years: Which UI has a better, more natural, feeling?\n\n\n## Choose year via drop-down menu {#sec-annex-whr-exercises-year-via-drop-down}\n\nIn <a class='glossary' title='The World Happiness Reports are a partnership of Gallup, the Oxford Wellbeing Research Centre, the UN Sustainable Development Solutions Network, and the WHR’s Editorial Board. The report is produced under the editorial control of the WHR Editorial Board. The Reports reflects a worldwide demand for more attention to happiness and well-being as criteria for government policy. It reviews the state of happiness in the world today and shows how the science of happiness explains personal and national variations in happiness. (https://worldhappiness.report/about/)'>WHR</a> I have datasets for the years 2011, 2012, 2014-2024. Yes, 2013 is missing! Because of the missing year I could use the limited choices option. Radio buttons are for 13 different choices an overhead, so I will go with the drop-down menu.\n\n::: {.my-code-collection}\n:::: {.my-code-collection-header}\n::::: {.my-code-collection-icon}\n:::::\n:::::: {#exm-annex-whr-exercises-drop-down-menu}\n: Limited choices: Choose year via drop-down menu\n::::::\n\n::::\n\n::::{.my-code-collection-container}\n\n::: {.panel-tabset}\n\n###### Code\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-annex-whr-exercises-drop-down-menu-code}\n: Limited choices: Choose year via drop-down menu\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(shiny)\n\nyears <- c(\"2011\", \"2012\", \"2014\", \"2015\", \"2016\", \"2017\",\n           \"2018\", \"2019\", \"2020\", \"2021\", \"2022\", \"2023\", \"2024\")\n\nui <- fluidPage(\n  selectInput(\"year\", \n              \"Choose year (2013 are no data available)\", \n              base::rev(years)\n              )\n)\n\nserver <- function(input, output, session) {\n\n}\n\nshinyApp(ui, server)\n```\n:::\n\n\n::::\n:::::\n\n\n###### Shiny\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-annex-whr-exercises-drop-down-menu-shiny}\n: Limited choices: drop-down menu and radio buttons\n::::::\n:::\n::::{.my-r-code-container}\n```{shinylive-r}\n#| standalone: true\n#| viewerHeight: 300\n\nlibrary(shiny)\n\nyears <- c(\"2011\", \"2012\", \"2014\", \"2015\", \"2016\", \"2017\",\n           \"2018\", \"2019\", \"2020\", \"2021\", \"2022\", \"2023\", \"2024\")\n\nui <- fluidPage(\n  selectInput(\"year\", \n              \"Choose year (2013 are no data available)\", \n              base::rev(years)\n              )\n)\n\nserver <- function(input, output, session) {\n\n}\n\nshinyApp(ui, server)\n```\n\n::::\n:::::\n\n:::\n\n::::\n:::::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}