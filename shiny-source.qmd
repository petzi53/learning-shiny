---
title: "Shiny Source Test"
format: html
filters: 
    - shinylive
---


## Without external file (worked!)

```{shinylive-r}
#| standalone: true
#| viewerHeight: 300


msg1 <-  "What's your name? "
msg2 <-  "Hello "


library(shiny)

ui <- fluidPage(
    textInput("name",  msg1),
    textOutput("greeting"),
)

server <- function(input, output, session) {
    output$greeting <- renderText({
        paste0(msg2, input$name)
    })
}

shinyApp(ui, server)


```

## With external file (does not work)

```{shinylive-r}
#| standalone: true
#| viewerHeight: 300


source(
    paste0(here::here(), "/R/shiny-test.R"),
    local = TRUE
)


library(shiny)

ui <- fluidPage(
    textInput("name",  msg1),
    textOutput("greeting"),
)

server <- function(input, output, session) {
    output$greeting <- renderText({
        paste0(msg2, input$name)
    })
}

shinyApp(ui, server)


```

## Without source with txt (does not work)


```{shinylive-r}
#| standalone: true
#| viewerHeight: 300
#| components: [editor, viewer]



library(shiny)

ui <- fluidPage(
    textInput("name",  getwd()),
    textOutput("greeting"),
)

server <- function(input, output, session) {
    output$greeting <- renderText({
        paste0("Hello", input$name)
    })
}

shinyApp(ui, server)


```

## Source at external URL


```{shinylive-r}
#| standalone: true
#| viewerHeight: 300


source(
    "https://raw.githubusercontent.com/petzi53/learning-shiny/refs/heads/master/R/shiny-test.R"
)


library(shiny)

ui <- fluidPage(
    textInput("name",  msg1),
    textOutput("greeting"),
)

server <- function(input, output, session) {
    output$greeting <- renderText({
        paste0(msg2, input$name)
    })
}

shinyApp(ui, server)


```

## Test shinylive directory

```{shinylive-r}
#| standalone: true
#| viewerHeight: 300

library(shiny)

here::i_am()

ui <- fluidPage(
  textInput("caption", "Caption", list.files("../../../shinylive/webr/packages")),
  verbatimTextOutput("value")
)

server <- function(input, output) {
  output$value <- renderText({ input$caption })
}

shinyApp(ui, server)



```

